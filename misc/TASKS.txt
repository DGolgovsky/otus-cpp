    Условие:
Реализовать свой аллокатор памяти, который позволит выполнять
операцию reserve для контейнера std::map. Аллокатор должен параметризоваться
количеством выделяемых за раз элементов. Освобождение конкретного
элемента не предполагается - аллокатор должен освобождать всю память
самостоятельно. Дальнейшее расширение занятой памяти на усмотрение
автора. Достаточно иметь фиксированный размер.

Реализовать свой контейнер, который по аналогии с контейнерами stl
параметризуется аллокатором. Контейнер должен иметь две возможности
- добавить новый элемент и обойти контейнер в одном направлении.
Совместимость с контейнерами stl на усмотрение автора.

Прикладной код должен содержать следующие вызовы:
• создание экземпляра std::map
• заполнение 10 элементами, где ключ это число от 0 до 9, а значение -
факториал ключа
• создание экземпляра std::map с новым аллокатором ограниченным 10
елементами
• заполнение 10 элементами, где ключ это число от 0 до 9, а значение -
факториал ключа
• вывод на экран всех значений (ключ и значение разделены пробелом)
хранящихся в контейнере
• создание экземпляра своего контейнера для хранения int
• заполнение 10 элементами от 0 до 9
• создание экземпляра своего контейнера для хранения int с новым
аллокатором ограниченным 10 елементами
• заполнение 10 элементами от 0 до 9
• вывод на экран всех значений хранящихся в контейнере

    Требования к реализации
Результат опубликовать в своём репозитории на bintray.
Выслать на адрес электронной почты название пакета содержащего
исполняемый файл allocator.

    Проверка
Задание считается выполненным успешно, если после просмотра кода,
подключения репозитория, установки пакета и запуска бинарного файла
командой: allocator
на экран выведется содерживое контейнеров с новым аллокатором.
Команда
ltrace allocator
Покажет снижение операций выделения памяти.
Будет отмечена скорость выполнения задания. Расширяемость зарезервированной
памяти.
